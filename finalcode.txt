#include<AFMotor.h>
#include<Ultrasonic.h>
AF_DCMotor motor1(1);
AF_DCMotor motor2(2);
AF_DCMotor motor3(3);
AF_DCMotor motor4(4);
Ultrasonic ultrasonic1(45,44);
Ultrasonic ultrasonic2(31,30);
Ultrasonic ultrasonic3(42,43);
Ultrasonic ultrasonic4(35,34);

void setup(){
  motor1.run(RELEASE);
  motor2.run(RELEASE);
  motor3.run(RELEASE);
  motor4.run(RELEASE);
  float distance1,distance2,distance3,distance4;
}

void loop(){
  float distance1,distance2,distance3,distance4;
  motor1.run(RELEASE);
  motor2.run(RELEASE);
  motor3.run(RELEASE);
  motor4.run(RELEASE);
  delay(1000);
  distance1=ultrasonic1.read();
  distance2=ultrasonic2.read();
  distance3=ultrasonic3.read();
  distance4=ultrasonic4.read();
  
  while((distance1<15) or (distance2<15))
  {
    if(distance4>12){
      motor1.setSpeed(120);
      motor2.setSpeed(120);
      motor3.setSpeed(120);
      motor4.setSpeed(120);
      motor1.run(FORWARD);
      motor2.run(FORWARD);
      motor3.run(FORWARD);
      motor4.run(FORWARD);
      delay(10);
        
    }
    else{
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      
    }
    distance1=ultrasonic1.read();
    distance2=ultrasonic2.read();
    distance3=ultrasonic3.read();
    distance4=ultrasonic4.read();
  }

  if(distance1>15 and distance1<=31 and distance2>15 and distance2<=31)
  {
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(800);
    motor1.setSpeed(120);
    motor2.setSpeed(120);
    motor3.setSpeed(120);
    motor4.setSpeed(120);
    motor1.run(FORWARD);
    motor2.run(FORWARD);
    motor3.run(FORWARD);
    motor4.run(FORWARD);
    delay(240);
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(400);
    while((distance1)or(distance2)<15){
      motor1.setSpeed(0);
      motor2.setSpeed(210);
      motor3.setSpeed(210);
      motor4.setSpeed(0);
      motor1.run(RELEASE);
      motor2.run(FORWARD);
      motor3.run(FORWARD);
      motor4.run(RELEASE);
      delay(310);
      distance1=ultrasonic1.read();
      distance2=ultrasonic2.read();
      distance3=ultrasonic3.read();
    if(distance3>=20){
      motor1.setSpeed(0);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(0);
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      delay(500);
      break;
    }
    }
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(1000);
    distance3=ultrasonic3.read();
    while(distance3>11){
      motor1.setSpeed(115);
      motor2.setSpeed(115);
      motor3.setSpeed(115);
      motor4.setSpeed(115);
      motor1.run(BACKWARD);
      motor2.run(BACKWARD);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
      delayMicroseconds(1);
      distance3=ultrasonic3.read();
    if(distance3<=11){
      break;
      motor1.setSpeed(0);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(0);
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      delay(200);
      break; 
    }
    distance3=ultrasonic3.read();
    }
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(1000);
    motor1.setSpeed(250);
    motor2.setSpeed(230);
    motor3.setSpeed(230);
    motor4.setSpeed(250);
    motor1.run(FORWARD);
    motor2.run(BACKWARD);
    motor3.run(BACKWARD);
    motor4.run(FORWARD);
    delay(210);
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(1000);
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(300);
    motor1.setSpeed(120);
    motor2.setSpeed(120);
    motor3.setSpeed(120);
    motor4.setSpeed(120);
    motor1.run(FORWARD);
    motor2.run(FORWARD);
    motor3.run(FORWARD);
    motor4.run(FORWARD);
    delay(200);
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(100); 
    motor1.setSpeed(250);
    motor2.setSpeed(150);
    motor3.setSpeed(150);
    motor4.setSpeed(245);
    motor1.run(BACKWARD);
    motor2.run(FORWARD);
    motor3.run(FORWARD);
    motor4.run(BACKWARD);
    delay(110);
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(100);
    distance3=ultrasonic3.read();
    while(distance3>3){
      motor1.setSpeed(105);
      motor2.setSpeed(105);
      motor3.setSpeed(105);
      motor4.setSpeed(105);
      motor1.run(BACKWARD);
      motor2.run(BACKWARD);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
      delayMicroseconds(5);
      distance3=ultrasonic3.read();
    if(distance3<=3){
      motor1.setSpeed(0);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(0);
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      delay(200);
      break;
    }
    }
    distance4=ultrasonic4.read();
    while(distance4>8){
      motor1.setSpeed(110);
      motor2.setSpeed(100);
      motor3.setSpeed(100);
      motor4.setSpeed(110);
      motor1.run(FORWARD);
      motor2.run(FORWARD);
      motor3.run(FORWARD);
      motor4.run(FORWARD);
      delayMicroseconds(4);
      distance4=ultrasonic4.read();
    if(distance4<=8){
      motor1.setSpeed(0);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(0);
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      delay(200);
      break;
    }
    }
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(10);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(1000);
    exit(0);
  }
  
  else if((distance1>25) and (distance2>25))
  {
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(700);
    motor1.setSpeed(120);
    motor2.setSpeed(120);
    motor3.setSpeed(120);
    motor4.setSpeed(120);
    motor1.run(FORWARD);
    motor2.run(FORWARD);
    motor3.run(FORWARD);
    motor4.run(FORWARD);
    delay(225);
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(500);
    distance1=ultrasonic1.read();
    distance2=ultrasonic2.read();
    while((distance1)and(distance2)<15)
    {
      motor1.setSpeed(248);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(248);
      motor1.run(BACKWARD);
      motor2.run(RELEASE);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
      delay(640);
      distance2=ultrasonic2.read();
      distance3=ultrasonic3.read();
    if((distance2>=240)and(distance3>=60)){
      motor1.setSpeed(0);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(0);
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      delay(500);
      break;
    }
    }
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(1000);
    distance3=ultrasonic3.read();
    if(distance3>30){
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      delay(1000);
      motor1.setSpeed(255);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(255);
      motor1.run(BACKWARD);
      motor2.run(RELEASE);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
      delay(640);
    }
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(1000);
    distance3=ultrasonic3.read();
    while(distance3>8){
      motor1.setSpeed(125);
      motor2.setSpeed(125);
      motor3.setSpeed(125);
      motor4.setSpeed(125);
      motor1.run(BACKWARD);
      motor2.run(BACKWARD);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
      delayMicroseconds(500);
      distance3=ultrasonic3.read();
    if(distance3<=8){
      motor1.setSpeed(0);
      motor2.setSpeed(0);
      motor3.setSpeed(0);
      motor4.setSpeed(0);
      motor1.run(RELEASE);
      motor2.run(RELEASE);
      motor3.run(RELEASE);
      motor4.run(RELEASE);
      delay(200);
      break;
      }
    }
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    motor3.setSpeed(0);
    motor4.setSpeed(0);
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
    delay(100);
    exit(0);
  }

  else{
    exit(0);
  }
}